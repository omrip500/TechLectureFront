[{"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\index.js":"1","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\App.js":"2","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Root.js":"4","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\About\\AboutPage.js":"5","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\AfterSigningUp\\AfterSignUp.js":"6","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Contact\\ContactPage.js":"7","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\ActivePresentations\\LectureList.js":"8","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\ActivePresentations\\EnterToLecture.js":"9","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Authentication\\Login\\LoginForm.js":"10","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Authentication\\Register\\RegistrationForm.js":"11","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Presentation\\PresentationShow\\PresentationShow.js":"12","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Presentation\\NewPresentationForm\\NewPresenationForm.js":"13","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\components\\NavBar.js":"14","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\components\\NewUserPopUp\\NewUserPopUp.js":"15","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Presentation\\PDFViewer\\PDFViewer .js":"16","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\components\\QR\\QRCodeGenerator.js":"17","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\LandingPage.jsx":"18","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Title\\Title.jsx":"19","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Explanation\\Explanation.jsx":"20","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Inspiration\\Inspiration.jsx":"21","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Examples\\Examples.jsx":"22","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Inspiration\\InspirationCars.jsx":"23","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Examples\\ExampleCard.jsx":"24","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Explanation\\ExplanationExample.jsx":"25","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Explanation\\Explanation.1.jsx":"26","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\components\\NewFilePopUp\\NewFilePopUp.jsx":"27","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\consts.js":"28","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\NotSupportsMobile\\NotSupportMobilePage.jsx":"29"},{"size":530,"mtime":1696588229506,"results":"30","hashOfConfig":"31"},{"size":3370,"mtime":1696531707836,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1692789603748,"results":"33","hashOfConfig":"31"},{"size":406,"mtime":1694277007061,"results":"34","hashOfConfig":"31"},{"size":999,"mtime":1696531751251,"results":"35","hashOfConfig":"31"},{"size":917,"mtime":1695644367493,"results":"36","hashOfConfig":"31"},{"size":2719,"mtime":1696531819530,"results":"37","hashOfConfig":"31"},{"size":3220,"mtime":1696531526779,"results":"38","hashOfConfig":"31"},{"size":1500,"mtime":1696530599796,"results":"39","hashOfConfig":"31"},{"size":6301,"mtime":1696530749871,"results":"40","hashOfConfig":"31"},{"size":9010,"mtime":1696531789418,"results":"41","hashOfConfig":"31"},{"size":5184,"mtime":1696593971049,"results":"42","hashOfConfig":"31"},{"size":4451,"mtime":1696530978008,"results":"43","hashOfConfig":"31"},{"size":3176,"mtime":1698084297902,"results":"44","hashOfConfig":"31"},{"size":516,"mtime":1694434492826,"results":"45","hashOfConfig":"31"},{"size":4302,"mtime":1696587160181,"results":"46","hashOfConfig":"31"},{"size":300,"mtime":1696530374654,"results":"47","hashOfConfig":"31"},{"size":688,"mtime":1696589073563,"results":"48","hashOfConfig":"31"},{"size":1047,"mtime":1698083910055,"results":"49","hashOfConfig":"31"},{"size":1952,"mtime":1698084033490,"results":"50","hashOfConfig":"31"},{"size":3721,"mtime":1698084399100,"results":"51","hashOfConfig":"31"},{"size":1414,"mtime":1696597787168,"results":"52","hashOfConfig":"31"},{"size":624,"mtime":1698084409583,"results":"53","hashOfConfig":"31"},{"size":348,"mtime":1696612374974,"results":"54","hashOfConfig":"31"},{"size":451,"mtime":1698084041156,"results":"55","hashOfConfig":"31"},{"size":1892,"mtime":1695633748242,"results":"56","hashOfConfig":"31"},{"size":1096,"mtime":1696425170992,"results":"57","hashOfConfig":"31"},{"size":49,"mtime":1698083484247,"results":"58","hashOfConfig":"31"},{"size":632,"mtime":1696590965192,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j8hvz3",{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"152"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\index.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\App.js",["160","161","162"],[],"import \"./App.css\";\nimport LandingPage from \"./pages/LandingPage/LandingPage\";\nimport RegistrationForm from \"./pages/Authentication/Register/RegistrationForm\";\nimport {\n  RouterProvider,\n  createBrowserRouter,\n  useNavigate,\n} from \"react-router-dom\";\nimport RootLayout from \"./pages/Root\";\nimport LoginPage from \"./pages/Authentication/Login/LoginForm\";\nimport ContactPage from \"./pages/Contact/ContactPage\";\nimport AboutPage from \"./pages/About/AboutPage\";\nimport { useSignOut, RequireAuth } from \"react-auth-kit\";\nimport AfterSignUp from \"./pages/AfterSigningUp/AfterSignUp\";\nimport NewPresentationForm from \"./pages/Presentation/NewPresentationForm/NewPresenationForm\";\nimport PresentationShow from \"./pages/Presentation/PresentationShow/PresentationShow\";\nimport LectureList from \"./pages/ActivePresentations/LectureList\";\nimport EnterToLecture from \"./pages/ActivePresentations/EnterToLecture\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nfunction App() {\n  const signOut = useSignOut();\n  const [isSigningOut, setIsSigningOut] = useState(false);\n\n  const signOutTechLecture = () => {\n    document.body.classList.add(\"signing-out\");\n\n    setTimeout(() => {\n      try {\n        setIsSigningOut(true);\n        signOut();\n        window.location.replace(\"/\");\n      } catch (err) {\n        console.error(\"Error during sign out:\", err);\n        window.location.replace(\"/\");\n      }\n    }, 0);\n    return null;\n  };\n\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <RootLayout />,\n      children: [\n        {\n          index: true,\n          element: <LandingPage />,\n        },\n        { path: \"register\", element: <RegistrationForm /> },\n        { path: \"login\", element: <LoginPage /> },\n        {\n          path: \"loginToAcessContent/\",\n          element: <LoginPage toLecture=\"true\" />,\n        },\n        {\n          path: \"contact\",\n          element: <ContactPage />,\n        },\n        { path: \"about\", element: <AboutPage /> },\n        {\n          path: \"signOut\",\n          loader: () => signOutTechLecture(),\n        },\n        { path: \"signedUpSuccsessfully\", element: <AfterSignUp /> },\n\n        {\n          path: \"presentation\",\n          element: (\n            <RequireAuth loginPath=\"login\">\n              <NewPresentationForm />\n            </RequireAuth>\n          ),\n        },\n\n        {\n          path: \"activePresentations\",\n          element: <LectureList />,\n        },\n\n        {\n          path: \"joinALecture\",\n          element: (\n            <RequireAuth loginPath={`/loginToAcessContent`}>\n              <EnterToLecture />{\" \"}\n            </RequireAuth>\n          ),\n        },\n\n        {\n          path: \"lectures/lecturerPosition/:fileNumber\",\n          element: <PresentationShow viewType=\"lecturer\" />,\n        },\n\n        {\n          path: \"lectures/studentPosition/:fileNumber\",\n          element: (\n            <RequireAuth loginPath={`/loginToAcessContent`}>\n              <PresentationShow viewType=\"student\" />\n            </RequireAuth>\n          ),\n        },\n      ],\n    },\n  ]);\n\n  return (\n    <>\n      {isSigningOut && (\n        <div className=\"loading-screen flex center\">\n          <span className=\"loading-text\">Signing out...</span>\n        </div>\n      )}\n      <RouterProvider router={router} />{\" \"}\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Root.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\About\\AboutPage.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\AfterSigningUp\\AfterSignUp.js",["163"],[],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./AfterSignUp.module.css\";\r\nconst ignUp = () => {\r\n  return (\r\n    <div className={classes[\"registration-container\"]}>\r\n      <div className={classes[\"registration-content\"]}>\r\n        <div className={classes[\"registration-description\"]}>\r\n          <h1>Thank You for Joining TechLecture!</h1>\r\n          <p>\r\n            Welcome to our community! You have successfully registered with\r\n            TechLecture. Start connecting with others, learning, and sharing\r\n            knowledge.\r\n          </p>\r\n          <p>\r\n            You can now{\" \"}\r\n            <a className={classes[\"login-link\"]} href=\"login\">\r\n              login\r\n            </a>{\" \"}\r\n            to your TechLecture account and start enjoying our community!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ignUp;\r\n","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Contact\\ContactPage.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\ActivePresentations\\LectureList.js",["164"],[],"import { useEffect, useState } from \"react\";\r\nimport classes from \"./LectureList.module.css\";\r\nimport { useAuthUser } from \"react-auth-kit\";\r\nimport { Navigate, Link } from \"react-router-dom\";\r\nimport { baseApi } from \"../../consts\";\r\n\r\nconst LectureList = () => {\r\n  const auth = useAuthUser();\r\n  const userEmail = auth().email;\r\n  const [userActivePresentations, setUserActivePresentations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getUserActivePresentations = async () => {\r\n      const response = await fetch(\r\n        `${baseApi}/userActivePresentations/${userEmail}`\r\n      );\r\n      const data = await response.json();\r\n      if (data.status === 200) {\r\n        setUserActivePresentations(data.presentations);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    getUserActivePresentations();\r\n  }, [userEmail]);\r\n\r\n  const handleDeletePresentation = async (presentationID) => {\r\n    const response = await fetch(`${baseApi}/deleteUserActivePresentation/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ presentationID: presentationID }),\r\n    });\r\n    const data = await response.json();\r\n    if (data.status === 200) {\r\n      setUserActivePresentations(\r\n        userActivePresentations.filter(\r\n          (presentation) => presentation._id !== presentationID\r\n        )\r\n      );\r\n    } else {\r\n      console.log(data.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes[\"lecture-list-container\"]}>\r\n      <h2 className={classes[\"lecture-list-title\"]}>\r\n        Your Active Lectures List\r\n      </h2>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : userActivePresentations.length === 0 ? (\r\n        <p className={classes[\".no-presentations-message\"]}>\r\n          You have no active lectures.\r\n        </p>\r\n      ) : (\r\n        <ul className={classes[\"lecture-list\"]}>\r\n          {userActivePresentations.map((presentation, index) => (\r\n            <li key={index} className={classes[\"lecture-item\"] + \" flex\"}>\r\n              <div className={classes[\"lecture-info\"]}>\r\n                <p className={classes[\"serial-number\"]}>\r\n                  Lecture Number: {index + 1}\r\n                </p>\r\n                <p className={classes[\"lecture-name\"]}>\r\n                  Topic: {presentation.lectureTopic}\r\n                </p>\r\n                <p className={classes[\"lecture-date\"]}>\r\n                  Date: {presentation.date}\r\n                </p>\r\n              </div>\r\n              <div className={classes[\"lectures-actions flex\"]}>\r\n                <Link\r\n                  to={`/lectures/lecturerPosition/${presentation.fileNumber}`}\r\n                  className={classes[\"lecture-link\"]}\r\n                >\r\n                  Link To Lecture\r\n                </Link>\r\n                <button\r\n                  onClick={() => handleDeletePresentation(presentation._id)}\r\n                  className={classes[\"delete-button\"]}\r\n                >\r\n                  Delete Lecture\r\n                </button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LectureList;\r\n","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\ActivePresentations\\EnterToLecture.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Authentication\\Login\\LoginForm.js",["165"],[],"import React, { useState, useContext } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport \"./LoginForm.css\";\r\nimport { Link, Navigate, useLocation } from \"react-router-dom\";\r\nimport { useSignIn, useIsAuthenticated } from \"react-auth-kit\";\r\nimport { baseApi } from \"../../../consts\";\r\n\r\nconst errorsExist = (errors) => {\r\n  if (Object.keys(errors).length !== 0) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst LoginPage = ({ toLecture }) => {\r\n  const [isPasswordWrong, setIsPasswordWrong] = useState(false);\r\n  const [dontHvaeAccount, setDontHvaeAccount] = useState(false);\r\n  const signIn = useSignIn();\r\n  const isAuthenticated = useIsAuthenticated();\r\n  const location = useLocation();\r\n\r\n  console.log(location);\r\n\r\n  // if (isAuthenticated() && toLecture) {\r\n  //   navigate(-1);\r\n  // }\r\n\r\n  if (isAuthenticated() && toLecture) {\r\n    window.location.replace(\r\n      `http://localhost:3000/lectures/studentPosition/${123}`\r\n    );\r\n  }\r\n\r\n  if (isAuthenticated()) {\r\n    return <Navigate to={\"/\"} replace={true} />;\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   navigate(\"/\");\r\n  // }, userIsLoggedIn);\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\" }}\r\n        validate={(values) => {\r\n          const errors = {};\r\n          if (!values.email) {\r\n            errors.email = \"Required\";\r\n          } else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n          ) {\r\n            errors.email = \"Invalid email address\";\r\n          }\r\n          if (!values.password) {\r\n            errors.password = \"Required\";\r\n          } else if (values.password.length < 3) {\r\n            errors.password =\r\n              \"The password must contain at least three characters\";\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          // alert(JSON.stringify(values, null, 2));\r\n          // console.log(values);\r\n          // const response = await fetch(\"http://localhost:8080/login\", {\r\n          const response = await fetch(`${baseApi}/login`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(values),\r\n          });\r\n\r\n          if (response.status === 200) {\r\n            const data = await response.json();\r\n            console.log(data);\r\n            if (data.status === 401) {\r\n              setIsPasswordWrong(true);\r\n              setDontHvaeAccount(false);\r\n            } else if (data.status === 402) {\r\n              setDontHvaeAccount(true);\r\n            } else if (data.status === 200) {\r\n              setIsPasswordWrong(false);\r\n              setDontHvaeAccount(false);\r\n              signIn({\r\n                token: data.token,\r\n                expiresIn: 3600,\r\n                tokenType: \"Bearer\",\r\n                authState: {\r\n                  firstName: data.firstName,\r\n                  lastName: data.lastName,\r\n                  email: data.email,\r\n                },\r\n              });\r\n            }\r\n            setSubmitting(false);\r\n          }\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          /* and other goodies */\r\n        }) => (\r\n          <div className=\"login-container flex\">\r\n            <div className=\"login-content flex\">\r\n              <div className=\"login-img flex\">\r\n                <img\r\n                  src={require(\"../../../images/login_illustration.png\")}\r\n                  // width=\"960px\"\r\n                  // height=\"759px\"\r\n                  alt=\"login_illustration\"\r\n                />\r\n              </div>\r\n              <div class=\"login-form\">\r\n                <h2>Hey, Good to See You!</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                  {toLecture && (\r\n                    <p className=\"haveToLogInMessage\">\r\n                      You have to log in if you want to join a lecture.\r\n                    </p>\r\n                  )}\r\n                  <br />\r\n                  <h2>Login</h2>\r\n                  <div className=\"form-group\">\r\n                    <label>Email:</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.email}\r\n                    />\r\n                  </div>\r\n                  <p className=\"problamMessage\">\r\n                    {errors.email && touched.email && errors.email}\r\n                  </p>\r\n                  <div className=\"form-group\">\r\n                    <label>Password:</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.password}\r\n                    />\r\n                  </div>\r\n                  <p className=\"errorMessage\">\r\n                    {errors.password && touched.password && errors.password}\r\n                  </p>\r\n                  <div className=\"dontHaveAccount\">\r\n                    <p>\r\n                      Don't have an account?{\" \"}\r\n                      <Link to=\"/register\">Register</Link>\r\n                    </p>\r\n                  </div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className={`login-button${\r\n                      errorsExist(errors) ? \"Disabled\" : \"\"\r\n                    }`}\r\n                    disabled={isSubmitting}\r\n                  >\r\n                    Login\r\n                  </button>\r\n                  {isPasswordWrong && (\r\n                    <p className=\"problamMessage\">Wrong Password</p>\r\n                  )}\r\n                  {dontHvaeAccount && (\r\n                    <p className=\"problamMessage\">\r\n                      You don't have an account, please Register.\r\n                    </p>\r\n                  )}\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Authentication\\Register\\RegistrationForm.js",["166"],[],"import React, { useState } from \"react\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { useIsAuthenticated } from \"react-auth-kit\";\r\n\r\nimport \"./RegistrationForm.css\";\r\nimport { baseApi } from \"../../../consts\";\r\n\r\nconst errorsExist = (errors) => {\r\n  if (Object.keys(errors).length !== 0) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst validateFunction = (values) => {\r\n  const errors = {};\r\n  if (!values.firstName) {\r\n    errors.firstName = \"Required\";\r\n  }\r\n  if (!values.lastName) {\r\n    errors.lastName = \"Required\";\r\n  }\r\n  if (!values.password) {\r\n    errors.password = \"Required\";\r\n  } else if (values.password.length < 3) {\r\n    errors.password = \"The password must contain at least three characters\";\r\n  }\r\n\r\n  if (!values.verifyPassword) {\r\n    errors.verifyPassword = \"Required\";\r\n  } else if (values.verifyPassword !== values.password) {\r\n    errors.verifyPassword = \"The passwords are not matches\";\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = \"Required\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n    errors.email = \"Invalid email address\";\r\n  }\r\n  if (!values.role) {\r\n    errors.role = \"Required\";\r\n  }\r\n  if (!values.usage) {\r\n    errors.usage = \"Required\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst RegistrationForm = () => {\r\n  const [dataFromServer, setDataFromServer] = useState({});\r\n  const [isAlreadyRegistered, setIsAlreadyRegistered] = useState(false);\r\n  const [passwordErrorFromServer, setPasswordErrorFromServer] = useState();\r\n\r\n  const isAuthenticated = useIsAuthenticated();\r\n\r\n  if (isAuthenticated()) {\r\n    return <Navigate to=\"/\" replace={true} />;\r\n  }\r\n\r\n  if (dataFromServer.status === 201) {\r\n    return <Navigate to=\"/signedUpSuccsessfully\" replace={true} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\" }}\r\n        validate={validateFunction}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          // alert(JSON.stringify(values, null, 2));\r\n          // console.log(values);\r\n          const response = await fetch(`${baseApi}/register`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(values),\r\n          })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              console.log(data);\r\n              setDataFromServer(data);\r\n              if (data.status === 409) {\r\n                setIsAlreadyRegistered(true);\r\n              } else if (data.status === 508) {\r\n                setPasswordErrorFromServer(data);\r\n                setIsAlreadyRegistered(false);\r\n              }\r\n\r\n              // setSubmitting(false);\r\n            });\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          handleChange,\r\n          handleBlur,\r\n          isSubmitting,\r\n          handleSubmit,\r\n          /* and other goodies */\r\n        }) => (\r\n          <div className=\"registration-container flex center\">\r\n            <div className=\"registration-content flex\">\r\n              <div className=\"registration-description\">\r\n                <h2>Welcome to Our Community!</h2>\r\n                <p>\r\n                  Join our platform and enjoy a seamless experience. Connect\r\n                  with others, learn and share knowledge.\r\n                </p>\r\n              </div>\r\n              <form className=\"registration-form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                  {passwordErrorFromServer && (\r\n                    <p>{passwordErrorFromServer.message}</p>\r\n                  )}\r\n                  <label>First Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"firstName\"\r\n                    component=\"div\"\r\n                    className=\"errorMessage\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Last Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </div>\r\n                <ErrorMessage\r\n                  name=\"lastName\"\r\n                  component=\"div\"\r\n                  className=\"errorMessage\"\r\n                />\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Email:</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    // onChange={handleChange}\r\n                    // onBlur={handleBlur}\r\n                    // value={values.email}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"email\"\r\n                    component=\"div\"\r\n                    className=\"errorMessage\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Password:</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </div>\r\n                <ErrorMessage\r\n                  name=\"password\"\r\n                  component=\"div\"\r\n                  className=\"errorMessage\"\r\n                />\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Verify Password:</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"verifyPassword\"\r\n                    value={values.verifyPassword}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </div>\r\n                <ErrorMessage\r\n                  name=\"verifyPassword\"\r\n                  component=\"div\"\r\n                  className=\"errorMessage\"\r\n                />\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Role:</label>\r\n                  <select\r\n                    name=\"role\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  >\r\n                    <option value=\"\">Select role</option>\r\n                    <option value=\"Student\">Student</option>\r\n                    <option value=\"Teacher\">Teacher</option>\r\n                    <option value=\"Lecturer\">Lecturer</option>\r\n                    <option value=\"IT Worker\">IT Worker</option>\r\n                    <option value=\"Other\">Other</option>\r\n                  </select>\r\n                </div>\r\n                <ErrorMessage\r\n                  name=\"role\"\r\n                  component=\"div\"\r\n                  className=\"errorMessage\"\r\n                />\r\n                <div className=\"form-group\">\r\n                  <label>Usage:</label>\r\n                  <select\r\n                    name=\"usage\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  >\r\n                    <option value=\"\">Select usage</option>\r\n                    <option value=\"Private\">Private</option>\r\n                    <option value=\"Business\">Business</option>\r\n                  </select>\r\n                </div>\r\n                <ErrorMessage\r\n                  name=\"usage\"\r\n                  component=\"div\"\r\n                  className=\"errorMessage\"\r\n                />\r\n                <div className=\"maybeHaveAccount\">\r\n                  <p>\r\n                    Already have an account?\r\n                    <Link to=\"/login\">\r\n                      <span className=\"loginWord\">Login</span>\r\n                    </Link>\r\n                  </p>\r\n                </div>\r\n                <button\r\n                  className={`submit-button${\r\n                    errorsExist(errors) ? \"Disabled\" : \"\"\r\n                  }`}\r\n                  type=\"submit\"\r\n                  // className=\"submit-button\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Submit\r\n                </button>\r\n                {isAlreadyRegistered && (\r\n                  <p className=\"registered\">\r\n                    You have an account. Please log in.\r\n                  </p>\r\n                )}\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n\r\n// Dat8pfiZHtLb2FAU\r\n","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Presentation\\PresentationShow\\PresentationShow.js",["167","168","169"],[],"import { useState, useEffect, createContext } from \"react\";\r\nimport PDFViewer from \"../PDFViewer/PDFViewer \";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAuthUser, useIsAuthenticated } from \"react-auth-kit\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport \"./PresentationShow.css\";\r\nimport NewUserPopUp from \"../../../components/NewUserPopUp/NewUserPopUp\";\r\nimport NewFilePopUp from \"../../../components/NewFilePopUp/NewFilePopUp\";\r\nimport { baseApi } from \"../../../consts\";\r\n\r\nconst PresentationShow = (props) => {\r\n  const [fileFounded, setFiledFounded] = useState(false);\r\n  const [fileUrl, setFileUrl] = useState(\"\");\r\n  const [lectureTitle, setLectureTitle] = useState(\"\");\r\n  const [lectureHours, setLectureHours] = useState(\"\");\r\n  const [lecturerName, setLecturerName] = useState(\"\");\r\n  const [userFileUrl, setUserFileUrl] = useState(\"\");\r\n  const [thereIsANewFile, setThereIsANewFile] = useState(false);\r\n  const [userFullName, setUserFulleName] = useState(\"\");\r\n  const [hasPermission, setHasPermission] = useState(true);\r\n  const [studentsUploadButtonText, setStudentsUploadButtonText] = useState(\r\n    \"File upload is not enabled\"\r\n  );\r\n  const [studentsCanUploadFiles, setStudentsCanUploadFiles] = useState(false);\r\n  const socket = io.connect();\r\n\r\n  const auth = useAuthUser();\r\n  const isAuthenticated = useIsAuthenticated();\r\n  const fileNumber = useParams().fileNumber;\r\n\r\n  const [newUsers, setNewUsers] = useState([]);\r\n\r\n  const clickHandle = () => {\r\n    setStudentsCanUploadFiles(!studentsCanUploadFiles);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (studentsCanUploadFiles === false) {\r\n      setStudentsUploadButtonText(\"File upload is not enabled\");\r\n    } else {\r\n      setStudentsUploadButtonText(\"File upload is enabled\");\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(`${baseApi}/upload/${fileNumber}`);\r\n\r\n        const data = await response.json();\r\n        if (data.status === 400) {\r\n          console.error(\"Failed to fetch data\");\r\n          setFiledFounded(false);\r\n        } else {\r\n          if (data.lecturerEmail !== auth().email) {\r\n            setHasPermission(false);\r\n          }\r\n          const presentationFileUrl = `${baseApi}/uploads/${fileNumber}.${data.fileType}`;\r\n          setFileUrl(presentationFileUrl);\r\n          setLectureTitle(data.lectureTopic);\r\n          setLectureHours(data.hours);\r\n          setLecturerName(data.lecturerName);\r\n          setFiledFounded(true);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"An error occurred:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [\r\n    fileNumber,\r\n    fileUrl,\r\n    studentsCanUploadFiles,\r\n    auth,\r\n    newUsers,\r\n    props.viewType,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (props.viewType === \"lecturer\") {\r\n      console.log(\"hi Im here\");\r\n      socket.emit(\"joinRoom\", { room: fileNumber });\r\n      socket.on(\"receiveMessage\", (message) => {\r\n        console.log(\"from data: \" + message);\r\n        console.log(\"from client: \" + fileNumber);\r\n\r\n        setNewUsers((prevUsers) => [...prevUsers, message]);\r\n        console.log(newUsers);\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    const getStudentFile = async () => {\r\n      setThereIsANewFile(false);\r\n      if (props.viewType === \"lecturer\") {\r\n        socket.emit(\"joinRoom\", { fileNumber });\r\n        socket.on(\"userFileNumber\", ({ fileNumber, userUploaded }) => {\r\n          setUserFileUrl(`/studentsUploads/${fileNumber}`);\r\n          setThereIsANewFile(true);\r\n          setUserFulleName(userUploaded);\r\n          if (studentsCanUploadFiles) {\r\n            window.scrollTo(0, 0);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    const intervalId = setInterval(getStudentFile, 4000);\r\n    return () => clearInterval(intervalId);\r\n  }, [userFileUrl, props.viewType]);\r\n\r\n  if (!fileUrl && fileFounded) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n\r\n  if (props.viewType === \"lecturer\" && (!hasPermission || !isAuthenticated())) {\r\n    return <h1>You haven't permission to access this page.</h1>;\r\n  }\r\n\r\n  if (fileFounded) {\r\n    return (\r\n      <div>\r\n        {newUsers.map((user) => (\r\n          <NewUserPopUp message={user + \" joined\"} />\r\n        ))}\r\n\r\n        {props.viewType === \"lecturer\" && (\r\n          <div className=\"centered-button\">\r\n            <button\r\n              className=\"allowUploadingFiles\"\r\n              onClick={clickHandle}\r\n              value={studentsUploadButtonText}\r\n            >\r\n              {studentsUploadButtonText}\r\n            </button>\r\n            <br />\r\n            <br />\r\n          </div>\r\n        )}\r\n        {thereIsANewFile && studentsCanUploadFiles && (\r\n          <NewFilePopUp userFullName={userFullName} userFileUrl={userFileUrl} />\r\n        )}\r\n        <PDFViewer\r\n          url={fileUrl}\r\n          lectureTitle={lectureTitle}\r\n          lectureHours={lectureHours}\r\n          lecturerName={lecturerName}\r\n          fileNumber={fileNumber}\r\n          viewType={props.viewType}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <h1 className=\"fileNotFoundMessage\">Failed to find the requested file.</h1>\r\n  );\r\n};\r\n\r\nexport default PresentationShow;\r\n",[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Presentation\\NewPresentationForm\\NewPresenationForm.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\components\\NavBar.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\components\\NewUserPopUp\\NewUserPopUp.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Presentation\\PDFViewer\\PDFViewer .js",["170"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useAuthUser } from \"react-auth-kit\";\r\nimport io from \"socket.io-client\";\r\nimport \"./PDFViewer.css\";\r\nimport { baseApi } from \"../../../consts\";\r\n\r\nconst PDFViewer = ({\r\n  url,\r\n  lectureTitle,\r\n  lectureHours,\r\n  lecturerName,\r\n  viewType,\r\n  fileNumber,\r\n}) => {\r\n  const [pdfData, setPdfData] = useState(null);\r\n  const [uploadedFile, setUploadedFile] = useState(null);\r\n  const auth = useAuthUser();\r\n  const socket = io.connect();\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => response.blob())\r\n      .then((blob) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n          setPdfData(reader.result);\r\n        };\r\n        reader.readAsArrayBuffer(blob);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching PDF:\", error);\r\n      });\r\n\r\n    // console.log(window.location.href.slice(47));\r\n\r\n    if (viewType === \"student\") {\r\n      socket.emit(\"joinRoom\", { fileNumber });\r\n      socket.emit(\"userConnected\", {\r\n        userConnected: auth().firstName + \" \" + auth().lastName + \" \",\r\n        room: fileNumber,\r\n      });\r\n    }\r\n  }, [url]);\r\n\r\n  const handleFileUpload = (e) => {\r\n    setUploadedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUploadButtonClick = () => {\r\n    const fileInput = document.getElementById(\"file-input\");\r\n    if (fileInput) {\r\n      fileInput.click();\r\n    }\r\n  };\r\n\r\n  const handleFileSubmit = async (event) => {\r\n    console.log(\"Im here\");\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"uploadedfile\", uploadedFile);\r\n    formData.append(\r\n      \"usersendFileName\",\r\n      auth().firstName + \" \" + auth().lastName\r\n    );\r\n    formData.append(\"presentationNumber\", fileNumber);\r\n\r\n    try {\r\n      const response = await fetch(`${baseApi}/studentsUploads`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const studentFileNumber = data.studentFileNumber;\r\n        console.log(\"Student file Number: \" + studentFileNumber);\r\n\r\n        socket.emit(\"joinRoom\", { fileNumber });\r\n        socket.emit(\"studentFileNumber\", {\r\n          fileNumber: studentFileNumber,\r\n          userUploaded: auth().firstName + \" \" + auth().lastName + \" \",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {viewType === \"lecturer\" && (\r\n        <h1 className=\"lectureNumber\">{\"Lecture Number: \" + fileNumber}</h1>\r\n      )}\r\n      <div className={`pdf-container ${viewType === \"lecturer\" ? \"\" : \"\"}`}>\r\n        {viewType === \"student\" && (\r\n          <h1 className=\"student-view-title\">Student View</h1>\r\n        )}\r\n        <h1 className=\"lecture-title\">{lectureTitle}</h1>\r\n        <p className=\"lecture-hours\">{lectureHours}</p>\r\n        <p className=\"lecturer-name\">{lecturerName}</p>\r\n        {viewType === \"student\" && (\r\n          <div className=\"student-view\">\r\n            <div className=\"student-upload\">\r\n              <input\r\n                type=\"file\"\r\n                id=\"file-input\"\r\n                name=\"uploadedFile\"\r\n                accept=\".pdf\"\r\n                onChange={handleFileUpload}\r\n                style={{ display: \"none\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <iframe\r\n          src={`data:application/pdf;base64,${btoa(\r\n            new Uint8Array(pdfData).reduce(\r\n              (data, byte) => data + String.fromCharCode(byte),\r\n              \"\"\r\n            )\r\n          )}`}\r\n          width=\"100%\"\r\n          height={viewType === \"student\" ? \"500px\" : \"1000px\"}\r\n          title=\"PDF Viewer\"\r\n        ></iframe>\r\n        {viewType === \"student\" && (\r\n          <button onClick={handleUploadButtonClick}>Upload File</button>\r\n        )}\r\n        <br />\r\n        <br />\r\n        <br />\r\n        {uploadedFile && (\r\n          <div className=\"uploaded-file\">\r\n            <form onSubmit={handleFileSubmit}>\r\n              <p>Saved File: {uploadedFile.name}</p>\r\n              <button type=\"submit\">Submit File</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PDFViewer;\r\n","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\components\\QR\\QRCodeGenerator.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\LandingPage.jsx",["171","172"],[],"import \"./LandingPage.css\";\r\nimport Title from \"./Title/Title\";\r\nimport Explanation from \"./Explanation/Explanation\";\r\nimport { useAuthUser, useIsAuthenticated } from \"react-auth-kit\";\r\nimport Examples from \"./Examples/Examples\";\r\nimport Inspiration from \"./Inspiration/Inspiration\";\r\nimport NotSupportMobilePage from \"../NotSupportsMobile/NotSupportMobilePage\";\r\n\r\nfunction LandingPage() {\r\n  const auth = useAuthUser();\r\n  const isAuthenticated = useIsAuthenticated();\r\n\r\n  return (\r\n    <div className=\"landingPage\">\r\n      <Title />\r\n      <Explanation />\r\n      <Examples />\r\n      <Inspiration />\r\n      <NotSupportMobilePage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Title\\Title.jsx",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Explanation\\Explanation.jsx",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Inspiration\\Inspiration.jsx",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Examples\\Examples.jsx",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Inspiration\\InspirationCars.jsx",["173"],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Examples\\ExampleCard.jsx",["174"],[],"import \"./ExampleCard.css\";\r\n\r\nconst ExampleCard = ({ imgSrc, titleText, paragraphText }) => {\r\n  return (\r\n    <div className=\"exampleWithPhoto flex\">\r\n      <img src={imgSrc} />\r\n      <div className=\"example-text\">\r\n        <h1>{titleText}</h1>\r\n        <p>{paragraphText}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExampleCard;\r\n","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Explanation\\ExplanationExample.jsx",["175"],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Explanation\\Explanation.1.jsx",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\components\\NewFilePopUp\\NewFilePopUp.jsx",["176"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"./NewFilePopUp.css\";\r\n\r\nconst NewFilePopUp = ({ userFullName, userFileUrl }) => {\r\n  const [showFlash, setShowFlash] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // אם קיבלנו קריאה חדשה, הצג את האנימציה\r\n    setShowFlash(true);\r\n\r\n    // לאחר זמן קצר, הסתר את האנימציה\r\n    const timeout = setTimeout(() => {\r\n      setShowFlash(false);\r\n    }, 2000);\r\n\r\n    // בכל פעם שהקומפוננטה מאושרת מחדש, ננקה את ה-timeout\r\n    return () => clearTimeout(timeout);\r\n  }, [userFullName, userFileUrl]);\r\n\r\n  return (\r\n    <div className={`window-container ${showFlash ? \"flash\" : \"\"}`}>\r\n      <div className=\"image-preview\">\r\n        <div className=\"overlay\">\r\n          <p>\r\n            {`Your student: ${userFullName} uploaded a new file.`}\r\n            <br />\r\n            <a target=\"_blank\" href={userFileUrl}>\r\n              Open It\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewFilePopUp;\r\n","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\consts.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\NotSupportsMobile\\NotSupportMobilePage.jsx",["177"],[],"import classes from \"./NotSupportMobilePage.css\";\r\n\r\nconst NotSupportMobilePage = () => {\r\n  return (\r\n    <div className=\"notSupport\">\r\n      <h2>⚠️ TechLecture: Desktop Experience ⚠️ </h2>\r\n      <p>\r\n        🚫 Currently not available on mobile, but we're working on it! 🛠️ Stay\r\n        tuned for an enhanced mobile experience with TechLecture. Explore on\r\n        your computer or tablet for now! 🔗 Visit us at:\r\n        <span> techlectureback.onrender.com </span> and be prepared for the\r\n        future of mobile learning! 📱💡\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotSupportMobilePage;\r\n",{"ruleId":"178","severity":1,"message":"179","line":7,"column":3,"nodeType":"180","messageId":"181","endLine":7,"endColumn":14},{"ruleId":"178","severity":1,"message":"182","line":19,"column":10,"nodeType":"180","messageId":"181","endLine":19,"endColumn":19},{"ruleId":"178","severity":1,"message":"183","line":20,"column":10,"nodeType":"180","messageId":"181","endLine":20,"endColumn":19},{"ruleId":"178","severity":1,"message":"184","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":14},{"ruleId":"178","severity":1,"message":"185","line":4,"column":10,"nodeType":"180","messageId":"181","endLine":4,"endColumn":18},{"ruleId":"178","severity":1,"message":"186","line":1,"column":27,"nodeType":"180","messageId":"181","endLine":1,"endColumn":37},{"ruleId":"178","severity":1,"message":"187","line":73,"column":17,"nodeType":"180","messageId":"181","endLine":73,"endColumn":25},{"ruleId":"178","severity":1,"message":"188","line":1,"column":31,"nodeType":"180","messageId":"181","endLine":1,"endColumn":44},{"ruleId":"189","severity":1,"message":"190","line":91,"column":6,"nodeType":"191","endLine":91,"endColumn":14,"suggestions":"192"},{"ruleId":"189","severity":1,"message":"193","line":110,"column":6,"nodeType":"191","endLine":110,"endColumn":35,"suggestions":"194"},{"ruleId":"189","severity":1,"message":"195","line":43,"column":6,"nodeType":"191","endLine":43,"endColumn":11,"suggestions":"196"},{"ruleId":"178","severity":1,"message":"197","line":10,"column":9,"nodeType":"180","messageId":"181","endLine":10,"endColumn":13},{"ruleId":"178","severity":1,"message":"198","line":11,"column":9,"nodeType":"180","messageId":"181","endLine":11,"endColumn":24},{"ruleId":"199","severity":1,"message":"200","line":13,"column":7,"nodeType":"201","endLine":13,"endColumn":28},{"ruleId":"199","severity":1,"message":"200","line":6,"column":7,"nodeType":"201","endLine":6,"endColumn":27},{"ruleId":"199","severity":1,"message":"200","line":15,"column":7,"nodeType":"201","endLine":15,"endColumn":51},{"ruleId":"202","severity":1,"message":"203","line":27,"column":13,"nodeType":"201","messageId":"204","endLine":27,"endColumn":51,"fix":"205"},{"ruleId":"178","severity":1,"message":"206","line":1,"column":8,"nodeType":"180","messageId":"181","endLine":1,"endColumn":15},"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useParams' is defined but never used.","'Link' is defined but never used.","'Navigate' is defined but never used.","'useContext' is defined but never used.","'response' is assigned a value but never used.","'createContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fileNumber', 'newUsers', and 'props.viewType'. Either include them or remove the dependency array.","ArrayExpression",["207"],"React Hook useEffect has missing dependencies: 'fileNumber', 'socket', and 'studentsCanUploadFiles'. Either include them or remove the dependency array.",["208"],"React Hook useEffect has missing dependencies: 'auth', 'fileNumber', 'socket', and 'viewType'. Either include them or remove the dependency array.",["209"],"'auth' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"210","text":"211"},"'classes' is defined but never used.",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},[864,864]," rel=\"noreferrer\"","Update the dependencies array to be: [fileNumber, newUsers, props.viewType, socket]",{"range":"218","text":"219"},"Update the dependencies array to be: [userFileUrl, props.viewType, socket, fileNumber, studentsCanUploadFiles]",{"range":"220","text":"221"},"Update the dependencies array to be: [auth, fileNumber, socket, url, viewType]",{"range":"222","text":"223"},[3160,3168],"[fileNumber, newUsers, props.viewType, socket]",[3808,3837],"[userFileUrl, props.viewType, socket, fileNumber, studentsCanUploadFiles]",[1174,1179],"[auth, fileNumber, socket, url, viewType]"]