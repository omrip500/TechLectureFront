[{"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\index.js":"1","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\App.js":"2","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Root.js":"4","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\About\\AboutPage.js":"5","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\AfterSigningUp\\AfterSignUp.js":"6","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Contact\\ContactPage.js":"7","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\ActivePresentations\\LectureList.js":"8","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\ActivePresentations\\EnterToLecture.js":"9","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Authentication\\Login\\LoginForm.js":"10","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Authentication\\Register\\RegistrationForm.js":"11","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Presentation\\PresentationShow\\PresentationShow.js":"12","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Presentation\\NewPresentationForm\\NewPresenationForm.js":"13","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\components\\NavBar.js":"14","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\components\\NewUserPopUp\\NewUserPopUp.js":"15","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Presentation\\PDFViewer\\PDFViewer .js":"16","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\components\\QR\\QRCodeGenerator.js":"17","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\LandingPage.jsx":"18","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Title\\Title.jsx":"19","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Explanation\\Explanation.jsx":"20","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Inspiration\\Inspiration.jsx":"21","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Examples\\Examples.jsx":"22","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Inspiration\\InspirationCars.jsx":"23","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Examples\\ExampleCard.jsx":"24","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Explanation\\ExplanationExample.jsx":"25","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Explanation\\Explanation.1.jsx":"26","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\components\\NewFilePopUp\\NewFilePopUp.jsx":"27"},{"size":742,"mtime":1695046211051,"results":"28","hashOfConfig":"29"},{"size":3627,"mtime":1696364040006,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1692789603748,"results":"31","hashOfConfig":"29"},{"size":406,"mtime":1694277007061,"results":"32","hashOfConfig":"29"},{"size":982,"mtime":1695715811423,"results":"33","hashOfConfig":"29"},{"size":917,"mtime":1695644367493,"results":"34","hashOfConfig":"29"},{"size":2723,"mtime":1696356592222,"results":"35","hashOfConfig":"29"},{"size":3315,"mtime":1696356594601,"results":"36","hashOfConfig":"29"},{"size":1506,"mtime":1696356433888,"results":"37","hashOfConfig":"29"},{"size":6232,"mtime":1696356593555,"results":"38","hashOfConfig":"29"},{"size":9018,"mtime":1696356592888,"results":"39","hashOfConfig":"29"},{"size":5389,"mtime":1696425925799,"results":"40","hashOfConfig":"29"},{"size":4465,"mtime":1696356591510,"results":"41","hashOfConfig":"29"},{"size":3279,"mtime":1695715120958,"results":"42","hashOfConfig":"29"},{"size":516,"mtime":1694434492826,"results":"43","hashOfConfig":"29"},{"size":4330,"mtime":1696422577947,"results":"44","hashOfConfig":"29"},{"size":295,"mtime":1693646032832,"results":"45","hashOfConfig":"29"},{"size":547,"mtime":1695641630909,"results":"46","hashOfConfig":"29"},{"size":1037,"mtime":1695721927680,"results":"47","hashOfConfig":"29"},{"size":1952,"mtime":1695657692337,"results":"48","hashOfConfig":"29"},{"size":3716,"mtime":1695657717608,"results":"49","hashOfConfig":"29"},{"size":1409,"mtime":1695657707324,"results":"50","hashOfConfig":"29"},{"size":624,"mtime":1695652322195,"results":"51","hashOfConfig":"29"},{"size":357,"mtime":1695632667723,"results":"52","hashOfConfig":"29"},{"size":422,"mtime":1695633336752,"results":"53","hashOfConfig":"29"},{"size":1892,"mtime":1695633748242,"results":"54","hashOfConfig":"29"},{"size":1096,"mtime":1696425170992,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"1j8hvz3",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"148"},"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\index.js",[],[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\App.js",["149","150","151"],[],"import \"./App.css\";\nimport LandingPage from \"./pages/LandingPage/LandingPage\";\nimport RegistrationForm from \"./pages/Authentication/Register/RegistrationForm\";\nimport {\n  RouterProvider,\n  createBrowserRouter,\n  useNavigate,\n} from \"react-router-dom\";\nimport RootLayout from \"./pages/Root\";\nimport LoginPage from \"./pages/Authentication/Login/LoginForm\";\nimport ContactPage from \"./pages/Contact/ContactPage\";\nimport AboutPage from \"./pages/About/AboutPage\";\nimport { useSignOut, RequireAuth } from \"react-auth-kit\";\nimport AfterSignUp from \"./pages/AfterSigningUp/AfterSignUp\";\nimport NewPresentationForm from \"./pages/Presentation/NewPresentationForm/NewPresenationForm\";\nimport PresentationShow from \"./pages/Presentation/PresentationShow/PresentationShow\";\nimport LectureList from \"./pages/ActivePresentations/LectureList\";\nimport EnterToLecture from \"./pages/ActivePresentations/EnterToLecture\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nfunction App() {\n  const signOut = useSignOut();\n  const [isSigningOut, setIsSigningOut] = useState(false);\n  const { fileNumber } = useParams();\n\n  useEffect(() => {\n    const lastFile = getLastStudentsUpload();\n  }, []);\n\n  const getLastStudentsUpload = async () =>\n    await fetch(\n      // \"http://localhost:8080/upload/\" + fileNumber\n      \"/getLastStudentsUpload\"\n    );\n\n  const signOutTechLecture = () => {\n    document.body.classList.add(\"signing-out\");\n\n    setTimeout(() => {\n      try {\n        setIsSigningOut(true);\n        signOut();\n        window.location.replace(\"/\");\n      } catch (err) {\n        console.error(\"Error during sign out:\", err);\n        window.location.replace(\"/\");\n      }\n    }, 0);\n    return null;\n  };\n\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <RootLayout />,\n      children: [\n        {\n          index: true,\n          element: <LandingPage />,\n        },\n        { path: \"register\", element: <RegistrationForm /> },\n        { path: \"login\", element: <LoginPage /> },\n        {\n          path: \"loginToAcessContent/\",\n          element: <LoginPage toLecture=\"true\" />,\n        },\n        {\n          path: \"contact\",\n          element: <ContactPage />,\n        },\n        { path: \"about\", element: <AboutPage /> },\n        {\n          path: \"signOut\",\n          loader: () => signOutTechLecture(),\n        },\n        { path: \"signedUpSuccsessfully\", element: <AfterSignUp /> },\n\n        {\n          path: \"presentation\",\n          element: (\n            <RequireAuth loginPath=\"login\">\n              <NewPresentationForm />\n            </RequireAuth>\n          ),\n        },\n\n        {\n          path: \"activePresentations\",\n          element: <LectureList />,\n        },\n\n        {\n          path: \"joinALecture\",\n          element: (\n            <RequireAuth loginPath={`/loginToAcessContent`}>\n              <EnterToLecture />{\" \"}\n            </RequireAuth>\n          ),\n        },\n\n        {\n          path: \"lectures/lecturerPosition/:fileNumber\",\n          element: <PresentationShow viewType=\"lecturer\" />,\n        },\n\n        {\n          path: \"lectures/studentPosition/:fileNumber\",\n          element: (\n            <RequireAuth loginPath={`/loginToAcessContent`}>\n              <PresentationShow viewType=\"student\" />\n            </RequireAuth>\n          ),\n        },\n      ],\n    },\n  ]);\n\n  return (\n    <>\n      {isSigningOut && (\n        <div className=\"loading-screen\">\n          <span className=\"loading-text\">Signing out...</span>\n        </div>\n      )}\n      <RouterProvider router={router} />{\" \"}\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Root.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\About\\AboutPage.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\AfterSigningUp\\AfterSignUp.js",["152"],[],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./AfterSignUp.module.css\";\r\nconst ignUp = () => {\r\n  return (\r\n    <div className={classes[\"registration-container\"]}>\r\n      <div className={classes[\"registration-content\"]}>\r\n        <div className={classes[\"registration-description\"]}>\r\n          <h1>Thank You for Joining TechLecture!</h1>\r\n          <p>\r\n            Welcome to our community! You have successfully registered with\r\n            TechLecture. Start connecting with others, learning, and sharing\r\n            knowledge.\r\n          </p>\r\n          <p>\r\n            You can now{\" \"}\r\n            <a className={classes[\"login-link\"]} href=\"login\">\r\n              login\r\n            </a>{\" \"}\r\n            to your TechLecture account and start enjoying our community!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ignUp;\r\n","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Contact\\ContactPage.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\ActivePresentations\\LectureList.js",["153"],[],"import { useEffect, useState } from \"react\";\r\nimport classes from \"./LectureList.module.css\";\r\nimport { useAuthUser } from \"react-auth-kit\";\r\nimport { Navigate, Link } from \"react-router-dom\";\r\n\r\nconst LectureList = () => {\r\n  const auth = useAuthUser();\r\n  const userEmail = auth().email;\r\n  const [userActivePresentations, setUserActivePresentations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getUserActivePresentations = async () => {\r\n      const response = await fetch(\r\n        // \"http://localhost:8080/userActivePresentations/\" + userEmail\r\n        \"/userActivePresentations/\" + userEmail\r\n      );\r\n      const data = await response.json();\r\n      if (data.status === 200) {\r\n        setUserActivePresentations(data.presentations);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    getUserActivePresentations();\r\n  }, [userEmail]);\r\n\r\n  const handleDeletePresentation = async (presentationID) => {\r\n    const response = await fetch(\r\n      // \"http://localhost:8080/deleteUserActivePresentation/\",\r\n      \"/deleteUserActivePresentation/\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ presentationID: presentationID }),\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    if (data.status === 200) {\r\n      setUserActivePresentations(\r\n        userActivePresentations.filter(\r\n          (presentation) => presentation._id !== presentationID\r\n        )\r\n      );\r\n    } else {\r\n      console.log(data.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes[\"lecture-list-container\"]}>\r\n      <h2 className={classes[\"lecture-list-title\"]}>\r\n        Your Active Lectures List\r\n      </h2>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : userActivePresentations.length === 0 ? (\r\n        <p className={classes[\".no-presentations-message\"]}>\r\n          You have no active lectures.\r\n        </p>\r\n      ) : (\r\n        <ul className={classes[\"lecture-list\"]}>\r\n          {userActivePresentations.map((presentation, index) => (\r\n            <li key={index} className={classes[\"lecture-item\"]}>\r\n              <div className={classes[\"lecture-info\"]}>\r\n                <p className={classes[\"serial-number\"]}>\r\n                  Lecture Number: {index + 1}\r\n                </p>\r\n                <p className={classes[\"lecture-name\"]}>\r\n                  Topic: {presentation.lectureTopic}\r\n                </p>\r\n                <p className={classes[\"lecture-date\"]}>\r\n                  Date: {presentation.date}\r\n                </p>\r\n              </div>\r\n              <div className={classes[\"lectures-actions\"]}>\r\n                <Link\r\n                  to={`/lectures/lecturerPosition/${presentation.fileNumber}`}\r\n                  className={classes[\"lecture-link\"]}\r\n                >\r\n                  Link To Lecture\r\n                </Link>\r\n                <button\r\n                  onClick={() => handleDeletePresentation(presentation._id)}\r\n                  className={classes[\"delete-button\"]}\r\n                >\r\n                  Delete Lecture\r\n                </button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LectureList;\r\n","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\ActivePresentations\\EnterToLecture.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Authentication\\Login\\LoginForm.js",["154"],[],"import React, { useState, useContext } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport \"./LoginForm.css\";\r\nimport { Link, Navigate, useLocation } from \"react-router-dom\";\r\nimport { useSignIn, useIsAuthenticated } from \"react-auth-kit\";\r\n\r\nconst errorsExist = (errors) => {\r\n  if (Object.keys(errors).length !== 0) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst LoginPage = ({ toLecture }) => {\r\n  const [isPasswordWrong, setIsPasswordWrong] = useState(false);\r\n  const [dontHvaeAccount, setDontHvaeAccount] = useState(false);\r\n  const signIn = useSignIn();\r\n  const isAuthenticated = useIsAuthenticated();\r\n  const location = useLocation();\r\n\r\n  console.log(location);\r\n\r\n  // if (isAuthenticated() && toLecture) {\r\n  //   navigate(-1);\r\n  // }\r\n\r\n  if (isAuthenticated() && toLecture) {\r\n    window.location.replace(\r\n      `http://localhost:3000/lectures/studentPosition/${123}`\r\n    );\r\n  }\r\n\r\n  if (isAuthenticated()) {\r\n    return <Navigate to={\"/\"} replace={true} />;\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   navigate(\"/\");\r\n  // }, userIsLoggedIn);\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\" }}\r\n        validate={(values) => {\r\n          const errors = {};\r\n          if (!values.email) {\r\n            errors.email = \"Required\";\r\n          } else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n          ) {\r\n            errors.email = \"Invalid email address\";\r\n          }\r\n          if (!values.password) {\r\n            errors.password = \"Required\";\r\n          } else if (values.password.length < 3) {\r\n            errors.password =\r\n              \"The password must contain at least three characters\";\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          // alert(JSON.stringify(values, null, 2));\r\n          // console.log(values);\r\n          // const response = await fetch(\"http://localhost:8080/login\", {\r\n          const response = await fetch(\"/login\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(values),\r\n          });\r\n\r\n          if (response.status === 200) {\r\n            const data = await response.json();\r\n            console.log(data);\r\n            if (data.status === 401) {\r\n              setIsPasswordWrong(true);\r\n              setDontHvaeAccount(false);\r\n            } else if (data.status === 402) {\r\n              setDontHvaeAccount(true);\r\n            } else if (data.status === 200) {\r\n              setIsPasswordWrong(false);\r\n              setDontHvaeAccount(false);\r\n              signIn({\r\n                token: data.token,\r\n                expiresIn: 3600,\r\n                tokenType: \"Bearer\",\r\n                authState: {\r\n                  firstName: data.firstName,\r\n                  lastName: data.lastName,\r\n                  email: data.email,\r\n                },\r\n              });\r\n            }\r\n            setSubmitting(false);\r\n          }\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          /* and other goodies */\r\n        }) => (\r\n          <div className=\"login-container\">\r\n            <div className=\"login-content\">\r\n              <div className=\"login-img\">\r\n                <img\r\n                  src={require(\"../../../images/login_illustration.png\")}\r\n                  // width=\"960px\"\r\n                  // height=\"759px\"\r\n                  alt=\"login_illustration\"\r\n                />\r\n              </div>\r\n              <div class=\"login-form\">\r\n                <h2>Hey, Good to See You!</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                  {toLecture && (\r\n                    <p className=\"haveToLogInMessage\">\r\n                      You have to log in if you want to join a lecture.\r\n                    </p>\r\n                  )}\r\n                  <br />\r\n                  <h2>Login</h2>\r\n                  <div className=\"form-group\">\r\n                    <label>Email:</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.email}\r\n                    />\r\n                  </div>\r\n                  <p className=\"problamMessage\">\r\n                    {errors.email && touched.email && errors.email}\r\n                  </p>\r\n                  <div className=\"form-group\">\r\n                    <label>Password:</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.password}\r\n                    />\r\n                  </div>\r\n                  <p className=\"errorMessage\">\r\n                    {errors.password && touched.password && errors.password}\r\n                  </p>\r\n                  <div className=\"dontHaveAccount\">\r\n                    <p>\r\n                      Don't have an account?{\" \"}\r\n                      <Link to=\"/register\">Register</Link>\r\n                    </p>\r\n                  </div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className={`login-button${\r\n                      errorsExist(errors) ? \"Disabled\" : \"\"\r\n                    }`}\r\n                    disabled={isSubmitting}\r\n                  >\r\n                    Login\r\n                  </button>\r\n                  {isPasswordWrong && (\r\n                    <p className=\"problamMessage\">Wrong Password</p>\r\n                  )}\r\n                  {dontHvaeAccount && (\r\n                    <p className=\"problamMessage\">\r\n                      You don't have an account, please Register.\r\n                    </p>\r\n                  )}\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Authentication\\Register\\RegistrationForm.js",["155"],[],"import React, { useState } from \"react\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { useIsAuthenticated } from \"react-auth-kit\";\r\n\r\nimport \"./RegistrationForm.css\";\r\n\r\nconst errorsExist = (errors) => {\r\n  if (Object.keys(errors).length !== 0) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst validateFunction = (values) => {\r\n  const errors = {};\r\n  if (!values.firstName) {\r\n    errors.firstName = \"Required\";\r\n  }\r\n  if (!values.lastName) {\r\n    errors.lastName = \"Required\";\r\n  }\r\n  if (!values.password) {\r\n    errors.password = \"Required\";\r\n  } else if (values.password.length < 3) {\r\n    errors.password = \"The password must contain at least three characters\";\r\n  }\r\n\r\n  if (!values.verifyPassword) {\r\n    errors.verifyPassword = \"Required\";\r\n  } else if (values.verifyPassword !== values.password) {\r\n    errors.verifyPassword = \"The passwords are not matches\";\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = \"Required\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n    errors.email = \"Invalid email address\";\r\n  }\r\n  if (!values.role) {\r\n    errors.role = \"Required\";\r\n  }\r\n  if (!values.usage) {\r\n    errors.usage = \"Required\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst RegistrationForm = () => {\r\n  const [dataFromServer, setDataFromServer] = useState({});\r\n  const [isAlreadyRegistered, setIsAlreadyRegistered] = useState(false);\r\n  const [passwordErrorFromServer, setPasswordErrorFromServer] = useState();\r\n\r\n  const isAuthenticated = useIsAuthenticated();\r\n\r\n  if (isAuthenticated()) {\r\n    return <Navigate to=\"/\" replace={true} />;\r\n  }\r\n\r\n  if (dataFromServer.status === 201) {\r\n    return <Navigate to=\"/signedUpSuccsessfully\" replace={true} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\" }}\r\n        validate={validateFunction}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          // alert(JSON.stringify(values, null, 2));\r\n          // console.log(values);\r\n          // const response = await fetch(\"http://localhost:8080/register\", {\r\n          const response = await fetch(\"/register\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(values),\r\n          })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              console.log(data);\r\n              setDataFromServer(data);\r\n              if (data.status === 409) {\r\n                setIsAlreadyRegistered(true);\r\n              } else if (data.status === 508) {\r\n                setPasswordErrorFromServer(data);\r\n                setIsAlreadyRegistered(false);\r\n              }\r\n\r\n              // setSubmitting(false);\r\n            });\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          handleChange,\r\n          handleBlur,\r\n          isSubmitting,\r\n          handleSubmit,\r\n          /* and other goodies */\r\n        }) => (\r\n          <div className=\"registration-container\">\r\n            <div className=\"registration-content\">\r\n              <div className=\"registration-description\">\r\n                <h1>Welcome to Our Community!</h1>\r\n                <p>\r\n                  Join our platform and enjoy a seamless experience. Connect\r\n                  with others, learn and share knowledge.\r\n                </p>\r\n              </div>\r\n              <form className=\"registration-form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                  {passwordErrorFromServer && (\r\n                    <p>{passwordErrorFromServer.message}</p>\r\n                  )}\r\n                  <label>First Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"firstName\"\r\n                    component=\"div\"\r\n                    className=\"errorMessage\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Last Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </div>\r\n                <ErrorMessage\r\n                  name=\"lastName\"\r\n                  component=\"div\"\r\n                  className=\"errorMessage\"\r\n                />\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Email:</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    // onChange={handleChange}\r\n                    // onBlur={handleBlur}\r\n                    // value={values.email}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"email\"\r\n                    component=\"div\"\r\n                    className=\"errorMessage\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Password:</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </div>\r\n                <ErrorMessage\r\n                  name=\"password\"\r\n                  component=\"div\"\r\n                  className=\"errorMessage\"\r\n                />\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Verify Password:</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"verifyPassword\"\r\n                    value={values.verifyPassword}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </div>\r\n                <ErrorMessage\r\n                  name=\"verifyPassword\"\r\n                  component=\"div\"\r\n                  className=\"errorMessage\"\r\n                />\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Role:</label>\r\n                  <select\r\n                    name=\"role\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  >\r\n                    <option value=\"\">Select role</option>\r\n                    <option value=\"Student\">Student</option>\r\n                    <option value=\"Teacher\">Teacher</option>\r\n                    <option value=\"Lecturer\">Lecturer</option>\r\n                    <option value=\"IT Worker\">IT Worker</option>\r\n                    <option value=\"Other\">Other</option>\r\n                  </select>\r\n                </div>\r\n                <ErrorMessage\r\n                  name=\"role\"\r\n                  component=\"div\"\r\n                  className=\"errorMessage\"\r\n                />\r\n                <div className=\"form-group\">\r\n                  <label>Usage:</label>\r\n                  <select\r\n                    name=\"usage\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  >\r\n                    <option value=\"\">Select usage</option>\r\n                    <option value=\"Private\">Private</option>\r\n                    <option value=\"Business\">Business</option>\r\n                  </select>\r\n                </div>\r\n                <ErrorMessage\r\n                  name=\"usage\"\r\n                  component=\"div\"\r\n                  className=\"errorMessage\"\r\n                />\r\n                <div className=\"maybeHaveAccount\">\r\n                  <p>\r\n                    Already have an account?\r\n                    <Link to=\"/login\">\r\n                      <span className=\"loginWord\">Login</span>\r\n                    </Link>\r\n                  </p>\r\n                </div>\r\n                <button\r\n                  className={`submit-button${\r\n                    errorsExist(errors) ? \"Disabled\" : \"\"\r\n                  }`}\r\n                  type=\"submit\"\r\n                  // className=\"submit-button\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Submit\r\n                </button>\r\n                {isAlreadyRegistered && (\r\n                  <p className=\"registered\">\r\n                    You have an account. Please log in.\r\n                  </p>\r\n                )}\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n\r\n// Dat8pfiZHtLb2FAU\r\n","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Presentation\\PresentationShow\\PresentationShow.js",["156","157","158"],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Presentation\\NewPresentationForm\\NewPresenationForm.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\components\\NavBar.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\components\\NewUserPopUp\\NewUserPopUp.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\Presentation\\PDFViewer\\PDFViewer .js",["159"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useAuthUser } from \"react-auth-kit\";\r\nimport io from \"socket.io-client\";\r\nimport \"./PDFViewer.css\";\r\n\r\nconst PDFViewer = ({\r\n  url,\r\n  lectureTitle,\r\n  lectureHours,\r\n  lecturerName,\r\n  viewType,\r\n  fileNumber,\r\n}) => {\r\n  const [pdfData, setPdfData] = useState(null);\r\n  const [uploadedFile, setUploadedFile] = useState(null);\r\n  const auth = useAuthUser();\r\n  const socket = io.connect();\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => response.blob())\r\n      .then((blob) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n          setPdfData(reader.result);\r\n        };\r\n        reader.readAsArrayBuffer(blob);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching PDF:\", error);\r\n      });\r\n\r\n    // console.log(window.location.href.slice(47));\r\n\r\n    if (viewType === \"student\") {\r\n      socket.emit(\"joinRoom\", { fileNumber });\r\n      socket.emit(\"userConnected\", {\r\n        userConnected: auth().firstName + \" \" + auth().lastName + \" \",\r\n        room: fileNumber,\r\n      });\r\n    }\r\n  }, [url]);\r\n\r\n  const handleFileUpload = (e) => {\r\n    setUploadedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUploadButtonClick = () => {\r\n    const fileInput = document.getElementById(\"file-input\");\r\n    if (fileInput) {\r\n      fileInput.click();\r\n    }\r\n  };\r\n\r\n  const handleFileSubmit = async (event) => {\r\n    console.log(\"Im here\");\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"uploadedfile\", uploadedFile);\r\n    formData.append(\r\n      \"usersendFileName\",\r\n      auth().firstName + \" \" + auth().lastName\r\n    );\r\n    formData.append(\"presentationNumber\", fileNumber);\r\n\r\n    try {\r\n      // const response = await fetch(\"http://localhost:8080/studentsUploads\", {\r\n      const response = await fetch(\"/studentsUploads\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const studentFileNumber = data.studentFileNumber;\r\n        console.log(\"Student file Number: \" + studentFileNumber);\r\n\r\n        socket.emit(\"joinRoom\", { fileNumber });\r\n        socket.emit(\"studentFileNumber\", {\r\n          fileNumber: studentFileNumber,\r\n          userUploaded: auth().firstName + \" \" + auth().lastName + \" \",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {viewType === \"lecturer\" && (\r\n        <h1 className=\"lectureNumber\">{\"Lecture Number: \" + fileNumber}</h1>\r\n      )}\r\n      <div className={`pdf-container ${viewType === \"lecturer\" ? \"\" : \"\"}`}>\r\n        {viewType === \"student\" && (\r\n          <h1 className=\"student-view-title\">Student View</h1>\r\n        )}\r\n        <h1 className=\"lecture-title\">{lectureTitle}</h1>\r\n        <p className=\"lecture-hours\">{lectureHours}</p>\r\n        <p className=\"lecturer-name\">{lecturerName}</p>\r\n        {viewType === \"student\" && (\r\n          <div className=\"student-view\">\r\n            <div className=\"student-upload\">\r\n              <input\r\n                type=\"file\"\r\n                id=\"file-input\"\r\n                name=\"uploadedFile\"\r\n                accept=\".pdf\"\r\n                onChange={handleFileUpload}\r\n                style={{ display: \"none\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <iframe\r\n          src={`data:application/pdf;base64,${btoa(\r\n            new Uint8Array(pdfData).reduce(\r\n              (data, byte) => data + String.fromCharCode(byte),\r\n              \"\"\r\n            )\r\n          )}`}\r\n          width=\"100%\"\r\n          height={viewType === \"student\" ? \"500px\" : \"1000px\"}\r\n          title=\"PDF Viewer\"\r\n        ></iframe>\r\n        {viewType === \"student\" && (\r\n          <button onClick={handleUploadButtonClick}>Upload File</button>\r\n        )}\r\n        <br />\r\n        <br />\r\n        <br />\r\n        {uploadedFile && (\r\n          <div className=\"uploaded-file\">\r\n            <form onSubmit={handleFileSubmit}>\r\n              <p>Saved File: {uploadedFile.name}</p>\r\n              <button type=\"submit\">Submit File</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PDFViewer;\r\n","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\components\\QR\\QRCodeGenerator.js",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\LandingPage.jsx",["160","161"],[],"import \"./LandingPage.css\";\r\nimport Title from \"./Title/Title\";\r\nimport Explanation from \"./Explanation/Explanation\";\r\nimport { useAuthUser, useIsAuthenticated } from \"react-auth-kit\";\r\nimport Examples from \"./Examples/Examples\";\r\nimport Inspiration from \"./Inspiration/Inspiration\";\r\n\r\nfunction LandingPage() {\r\n  const auth = useAuthUser();\r\n  const isAuthenticated = useIsAuthenticated();\r\n\r\n  return (\r\n    <>\r\n      <Title />\r\n      <Explanation />\r\n      <Examples />\r\n      <Inspiration />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Title\\Title.jsx",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Explanation\\Explanation.jsx",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Inspiration\\Inspiration.jsx",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Examples\\Examples.jsx",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Inspiration\\InspirationCars.jsx",["162"],[],"import \"./InspirationCard.css\";\r\n\r\nconst InspirationCard = ({\r\n  mainImg,\r\n  avatarImg,\r\n  personName,\r\n  date,\r\n  titleText,\r\n  paragraphText,\r\n}) => {\r\n  return (\r\n    <div className=\"inspiration-card\">\r\n      <img src={mainImg} />\r\n      <div className=\"details\">\r\n        <img src={avatarImg} alt=\"avatar\" />\r\n        <p>\r\n          <br />\r\n          {personName} <br />\r\n          <br />\r\n          <br />\r\n          {date}\r\n        </p>\r\n      </div>\r\n      <div className=\"content\">\r\n        <h3>{titleText}</h3>\r\n        <p>{paragraphText}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InspirationCard;\r\n","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Examples\\ExampleCard.jsx",[],[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Explanation\\ExplanationExample.jsx",["163"],[],"import \"./ExplanationExample.css\";\r\n\r\nconst ExplanationExample = ({\r\n  exampleType,\r\n  titleText,\r\n  paragraphText,\r\n  imgSrc,\r\n}) => {\r\n  return (\r\n    <div className={`example ${exampleType}`}>\r\n      <div className={`examples-text ${exampleType}-text`}>\r\n        <h1>{titleText}</h1>\r\n        <p>{paragraphText}</p>\r\n      </div>\r\n      <img src={imgSrc} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExplanationExample;\r\n","C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\pages\\LandingPage\\Explanation\\Explanation.1.jsx",[],[],"C:\\Users\\omrip\\OneDrive\\שולחן העבודה\\Web Studying\\Personal Project\\TechLecture\\frontend\\src\\components\\NewFilePopUp\\NewFilePopUp.jsx",["164"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"./NewFilePopUp.css\";\r\n\r\nconst NewFilePopUp = ({ userFullName, userFileUrl }) => {\r\n  const [showFlash, setShowFlash] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // אם קיבלנו קריאה חדשה, הצג את האנימציה\r\n    setShowFlash(true);\r\n\r\n    // לאחר זמן קצר, הסתר את האנימציה\r\n    const timeout = setTimeout(() => {\r\n      setShowFlash(false);\r\n    }, 2000);\r\n\r\n    // בכל פעם שהקומפוננטה מאושרת מחדש, ננקה את ה-timeout\r\n    return () => clearTimeout(timeout);\r\n  }, [userFullName, userFileUrl]);\r\n\r\n  return (\r\n    <div className={`window-container ${showFlash ? \"flash\" : \"\"}`}>\r\n      <div className=\"image-preview\">\r\n        <div className=\"overlay\">\r\n          <p>\r\n            {`Your student: ${userFullName} uploaded a new file.`}\r\n            <br />\r\n            <a target=\"_blank\" href={userFileUrl}>\r\n              Open It\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewFilePopUp;\r\n",{"ruleId":"165","severity":1,"message":"166","line":7,"column":3,"nodeType":"167","messageId":"168","endLine":7,"endColumn":14},{"ruleId":"165","severity":1,"message":"169","line":25,"column":11,"nodeType":"167","messageId":"168","endLine":25,"endColumn":21},{"ruleId":"165","severity":1,"message":"170","line":28,"column":11,"nodeType":"167","messageId":"168","endLine":28,"endColumn":19},{"ruleId":"165","severity":1,"message":"171","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":14},{"ruleId":"165","severity":1,"message":"172","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":18},{"ruleId":"165","severity":1,"message":"173","line":1,"column":27,"nodeType":"167","messageId":"168","endLine":1,"endColumn":37},{"ruleId":"165","severity":1,"message":"174","line":73,"column":17,"nodeType":"167","messageId":"168","endLine":73,"endColumn":25},{"ruleId":"165","severity":1,"message":"175","line":1,"column":31,"nodeType":"167","messageId":"168","endLine":1,"endColumn":44},{"ruleId":"176","severity":1,"message":"177","line":95,"column":6,"nodeType":"178","endLine":95,"endColumn":14,"suggestions":"179"},{"ruleId":"176","severity":1,"message":"180","line":114,"column":6,"nodeType":"178","endLine":114,"endColumn":35,"suggestions":"181"},{"ruleId":"176","severity":1,"message":"182","line":42,"column":6,"nodeType":"178","endLine":42,"endColumn":11,"suggestions":"183"},{"ruleId":"165","severity":1,"message":"184","line":9,"column":9,"nodeType":"167","messageId":"168","endLine":9,"endColumn":13},{"ruleId":"165","severity":1,"message":"185","line":10,"column":9,"nodeType":"167","messageId":"168","endLine":10,"endColumn":24},{"ruleId":"186","severity":1,"message":"187","line":13,"column":7,"nodeType":"188","endLine":13,"endColumn":28},{"ruleId":"186","severity":1,"message":"187","line":15,"column":7,"nodeType":"188","endLine":15,"endColumn":27},{"ruleId":"189","severity":1,"message":"190","line":27,"column":13,"nodeType":"188","messageId":"191","endLine":27,"endColumn":51,"fix":"192"},"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'fileNumber' is assigned a value but never used.","'lastFile' is assigned a value but never used.","'Link' is defined but never used.","'Navigate' is defined but never used.","'useContext' is defined but never used.","'response' is assigned a value but never used.","'createContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fileNumber', 'newUsers', and 'props.viewType'. Either include them or remove the dependency array.","ArrayExpression",["193"],"React Hook useEffect has missing dependencies: 'fileNumber', 'socket', and 'studentsCanUploadFiles'. Either include them or remove the dependency array.",["194"],"React Hook useEffect has missing dependencies: 'auth', 'fileNumber', 'socket', and 'viewType'. Either include them or remove the dependency array.",["195"],"'auth' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"196","text":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},[864,864]," rel=\"noreferrer\"","Update the dependencies array to be: [fileNumber, newUsers, props.viewType, socket]",{"range":"204","text":"205"},"Update the dependencies array to be: [userFileUrl, props.viewType, socket, fileNumber, studentsCanUploadFiles]",{"range":"206","text":"207"},"Update the dependencies array to be: [auth, fileNumber, socket, url, viewType]",{"range":"208","text":"209"},[3346,3354],"[fileNumber, newUsers, props.viewType, socket]",[3962,3991],"[userFileUrl, props.viewType, socket, fileNumber, studentsCanUploadFiles]",[1130,1135],"[auth, fileNumber, socket, url, viewType]"]