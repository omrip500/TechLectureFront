const path = require('path');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const UglifyJSPlugin = require('uglifyjs-webpack-plugin');

const NODE_ENV = process.env.NODE_ENV || 'development';
const buildFolder = path.resolve(__dirname, './build');
const srcFolder = path.resolve(__dirname, './src');

module.exports = {
  context: srcFolder,
  entry: {
    'sae-vendor': ['styled-components', 'react', 'react-dom', 'slate', 'slate-react'],
    'sae-bundle': './entry',
    'sae-expose-bundle': './exposeEditor',
  },
  output: {
    path: buildFolder,
    filename: '[name].js'
  },
  module: {
    rules: [
      {
        test: /\.js$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader'
        }
      },
      {
        test: /\.css$/,
        use: [
          'style-loader',
          {
            loader: 'css-loader',
          }
        ],
      },
      {
        test: /\.(png|jpg|gif|svg)$/,
        use: [
          {
            loader: 'file-loader',
            options: {
              name: '/assets/images/[name].[ext]',
              useRelativePath: false
            }
          }
        ]
      },
    ]
  },
  watch: NODE_ENV === 'development',
  plugins: [
    new webpack.DefinePlugin({
      'process.env.NODE_ENV': JSON.stringify(NODE_ENV),
    }),
    new HtmlWebpackPlugin({
      template: 'index.html',
    }),
  ],
  devServer: {
    contentBase: buildFolder,
    compress: true,
    port: 9000,
    watchContentBase: NODE_ENV === 'development'
  },
};

if (NODE_ENV === 'production') {
  module.exports.plugins.push(
    new UglifyJSPlugin({
      uglifyOptions: {
        ie8: false,
        unused: true,
        dead_code: true,
        warnings: false,
      }
    })
  );
}
